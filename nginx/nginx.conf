user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Worker settings
events {
    worker_connections 1024;
}

# HTTP and HTTPS configuration
http {
    # Include mime types
    include /etc/nginx/mime.types;

    log_format http_log '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" '
                        '$request_time';

    access_log /var/log/nginx/access.log http_log;

    server {
        listen 80;
        
        # API requests - handle first to prevent them from being captured by the frontend location
        location /api/ {
            # Remove /api prefix when forwarding to backend
            proxy_pass http://backend:8000/api/;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
        
        # Frontend requests - handle all other paths
        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
    }
}